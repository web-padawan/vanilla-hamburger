const t='<div part="bar"></div>',e=t=>{const e=document.createElement("template");return e.innerHTML=t,e},s=(t,e)=>{const s=t.shadowRoot||t.attachShadow({mode:"open"});return s.appendChild(e.content.cloneNode(!0)),s},i=t=>Array.from(t.querySelectorAll("div")).map((t=>t.style)),r=(t,e)=>{for(const s in e)t.setProperty(s,e[s])},a=Symbol("props"),n=Symbol("render"),o=Symbol("styles"),d=Symbol("update");var h;const l=e("<style>:host{display:block;position:relative;width:48px;height:48px;cursor:pointer;-webkit-user-select:none;user-select:none}:host([hidden]){display:none !important}:host([disabled]){opacity:.5}button{position:absolute;top:0;left:0;width:100%;height:100%;border:none;-webkit-appearance:none;background:transparent;color:inherit}[part=bar]{background:currentColor;position:absolute}</style>"),u=Symbol("btn"),b=Symbol("updating"),c=Symbol("prepare"),p={size:32,direction:"left",disabled:!1,distance:"md",duration:.4,label:"hamburger",easing:"cubic-bezier(0, 0, 0, 1)",pressed:!1};class g extends HTMLElement{constructor(){super(),this[h]={},s(this,l),this.addEventListener("click",this)}static get observedAttributes(){return["disabled","distance","duration","easing","pressed","size","label"]}get easing(){return this[a].easing}set easing(t){this[a].easing=t,this[d]()}get distance(){return this[a].distance}set distance(t){this[a].distance=t,this[d]()}get duration(){return this[a].duration}set duration(t){this[a].duration=t,this[d]()}get disabled(){return this[a].disabled}set disabled(t){this[a].disabled=t,this.toggleAttribute("disabled",t),this[u]&&this[u].toggleAttribute("disabled",t)}get label(){return this[a].label}set label(t){this[a].label=t,this[u]&&this[u].setAttribute("aria-label",t)}get pressed(){return this[a].pressed}set pressed(t){this[a].pressed=t,this.toggleAttribute("pressed",!!t),this[u]&&this[u].setAttribute("aria-pressed",""+!!t),this[d]()}get size(){return this[a].size}set size(t){this[a].size=t,this[d]()}connectedCallback(){this[u]=this.shadowRoot.querySelector("button"),this.constructor.observedAttributes.forEach((t=>{if(this.hasOwnProperty(t)){const e=this[t];delete this[t],this[t]=e}else this[t]||(this[t]=p[t])}))}attributeChangedCallback(t,e,s){if(e!==s){let e=s;"size"==t||"duration"==t?e=null===s?null:Number(s):"pressed"!=t&&"disabled"!=t||(e=null!==s),this[t]=e}}handleEvent(t){"click"===t.type&&(this.pressed=!this.pressed,this.dispatchEvent(new CustomEvent("pressed-changed",{detail:{value:this.pressed}})))}focus(){this[u]&&this[u].focus()}blur(){this[u]&&this[u].blur()}click(){this.disabled||super.click()}[(h=a,c)](){const{distance:t,lines:e}=this,s=Math.max(12,Math.min(48,this.size)),i=s/12,r=Math.round(i),a=s/(e*(("lg"===t?.25:"sm"===t?.75:.5)+(3===e?1:1.25))),n=Math.round(a),o=r*e+n*(e-1),d=3===e?"lg"===t?4.0425:"sm"===t?5.1625:4.6325:"lg"===t?6.7875:"sm"===t?8.4875:7.6675,h=(i-r+(a-n))/(3===e?1:2);return{barHeight:r,barStyles:{height:r+"px",left:Math.round((48-s)/2)+"px",width:s+"px"},margin:n,move:parseFloat((s/d-h/(4/3)).toFixed(2)),pressed:this.pressed,time:Math.max(0,this.duration),topOffset:Math.round((48-o)/2)}}async[d](){this[b]||(this[b]=!0,this[b]=await!1,this[n](this[c]()))}}export{g as B,s as a,t as b,e as c,r as d,p as e,i as g,a as p,n as r,o as s,d as u};
